{"ast":null,"code":"var _jsxFileName = \"/Users/Kaden/Documents/reacttutorial/tictactoe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Switch from 'react-switch';\nimport './index.css';\n\nfunction Scorebutton(props) {\n  return React.createElement(\"select\", {\n    className: \"scorebutton\",\n    value: props.value,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"1\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"2\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"3\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"4\"), React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"5\"), React.createElement(\"option\", {\n    value: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"6\"), React.createElement(\"option\", {\n    value: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"7\"), React.createElement(\"option\", {\n    value: \"8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"8\"), React.createElement(\"option\", {\n    value: \"9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"9\"), React.createElement(\"option\", {\n    value: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"10\"));\n}\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.playername), React.createElement(Scorebutton, {\n      value: this.props.value,\n      onChange: event => this.props.onChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass HoleScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    const playerlis = this.props.players;\n    const playerscorelis = [];\n    var i;\n\n    for (i = 0; i < playerlis.length; i++) {\n      playerscorelis.push(\"3\");\n    }\n\n    this.state = {\n      players: playerlis,\n      playerscores: playerscorelis\n    };\n  }\n\n  handleChange(event, index) {\n    const playerscorelis = this.state.playerscores.slice();\n    playerscorelis[index] = event.target.value;\n    this.setState({\n      playerscores: playerscorelis\n    });\n  }\n\n  submitScore() {\n    alert(\"Player 2 scored \" + this.state.playerscores[1]);\n  }\n\n  render() {\n    const players1 = this.state.players.slice();\n    const scores1 = this.state.playerscores.slice();\n    const playersbuttons = players1.map((player, index) => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Player, {\n      playername: player,\n      key: index,\n      value: scores1[index],\n      onChange: event => this.handleChange(event, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Hole \", this.props.holenum), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Par \", this.props.holepar), React.createElement(\"ul\", {\n      className: \"scoring-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, playersbuttons)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.submitScore(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Next Hole\")));\n  }\n\n}\n\nclass GameForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleSwitch = () => {\n      this.setState(prevState => {\n        return {\n          switched: !prevState.switched\n        };\n      });\n    };\n\n    this.state = {\n      checked: true,\n      players: ['', ''],\n      isBeginning: true,\n      isStarted: false\n    };\n  }\n\n  handleChange(event, key) {\n    const nplayers = this.state.players.slice();\n    nplayers[key] = event.target.value;\n    this.setState({\n      players: nplayers\n    });\n  }\n\n  addPlayer() {\n    const nplayers = this.state.players.slice();\n    nplayers.push(\"\");\n    this.setState({\n      players: nplayers\n    });\n  }\n\n  submitPlayers() {\n    this.setState({\n      isBeginning: false,\n      isStarted: true\n    });\n  }\n\n  render() {\n    const players1 = this.state.players;\n    const playersbuttons = players1.map((player, index) => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      key: index,\n      onChange: event => this.handleChange(event, index),\n      value: player,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.isBeginning && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Working Title\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, playersbuttons), React.createElement(\"button\", {\n      className: \"add-player-button\",\n      onClick: () => this.addPlayer(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Add Player\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"toggle-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Front 9\"), React.createElement(Switch, {\n      className: \"toggle-switch\",\n      onChange: this.toggleSwitch,\n      checked: this.state.checked,\n      onColor: \"#223a5e\",\n      onHandleColor: \"#8fabd6\",\n      offColor: \"#8fabd6\",\n      offHandleColor: \"#223a5e\",\n      handleDiameter: 15,\n      uncheckedIcon: false,\n      checkedIcon: false,\n      boxShadow: \"0px 1px 5px rgba(255, 255, 255, 0.6)\",\n      activeBoxShadow: \"0px 0px 1px 10px rgba(255, 255, 255, 0.2)\",\n      height: 24,\n      width: 40,\n      id: \"small-radius-switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Back 9\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"start-game-button\",\n      onClick: this.submitPlayers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Start Game\")), this.state.isStarted && React.createElement(HoleScreen, {\n      holenum: \"8\",\n      holepar: \"3\",\n      players: this.state.players,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass GameControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBeginning: true,\n      isStarted: false,\n      players: ['', '', 'Luke']\n    };\n  }\n\n  handleChange(event, key) {\n    const nplayers = this.state.players.slice();\n    nplayers[key] = event.target.value;\n    this.setState({\n      players: nplayers\n    });\n  }\n\n  triggerStart() {\n    this.setState({\n      isBeginning: false,\n      isStarted: true\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.state.isBeginning && React.createElement(GameForm, {\n      submitPlayers: () => this.triggerStart(),\n      handleChange: (event, key) => this.handleChange(event, key),\n      names: this.state.players,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), this.state.isStarted && React.createElement(HoleScreen, {\n      holenum: \"1\",\n      holepar: \"3\",\n      players: this.state.players,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(GameForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 223\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/Kaden/Documents/reacttutorial/tictactoe/src/index.js"],"names":["React","ReactDOM","Switch","Scorebutton","props","value","onChange","Player","Component","constructor","render","playername","event","HoleScreen","playerlis","players","playerscorelis","i","length","push","state","playerscores","handleChange","index","slice","target","setState","submitScore","alert","players1","scores1","playersbuttons","map","player","holenum","holepar","GameForm","toggleSwitch","prevState","switched","checked","isBeginning","isStarted","key","nplayers","addPlayer","submitPlayers","GameControl","triggerStart","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Switch from 'react-switch';\nimport './index.css';\n\nfunction Scorebutton(props){\n  return(\n    <select className=\"scorebutton\" value={props.value} onChange={props.onChange}>\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\">3</option>\n      <option value=\"4\">4</option>\n      <option value=\"5\">5</option>\n      <option value=\"6\">6</option>\n      <option value=\"7\">7</option>\n      <option value=\"8\">8</option>\n      <option value=\"9\">9</option>\n      <option value=\"10\">10</option>\n    </select>\n  );\n}\n\n\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return(\n      <div>\n         <h3>{this.props.playername}</h3>\n         <Scorebutton value={this.props.value} onChange={event => this.props.onChange(event)}/>\n      </div>\n    );\n  }\n}\n\nclass HoleScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    const playerlis  = this.props.players;\n    const playerscorelis = [];\n    var i;\n    for (i = 0; i < playerlis.length; i++){\n      playerscorelis.push(\"3\")\n    }\n    this.state = {\n       players: playerlis,\n       playerscores: playerscorelis  \n    };\n  }\n  \n  handleChange(event,index){\n     const playerscorelis = this.state.playerscores.slice()\n     playerscorelis[index] = event.target.value;\n     this.setState({\n         playerscores: playerscorelis\n     });\n  }  \n\n  submitScore() {\n    alert(\"Player 2 scored \" + this.state.playerscores[1]);\n  }\n  render() {\n    const players1 = this.state.players.slice();\n    const scores1 = this.state.playerscores.slice()\n    const playersbuttons = players1.map((player,index) =>\n            <li><Player \n                   playername = {player}\n                   key={index} \n                   value={scores1[index]}\n                   onChange={(event) => this.handleChange(event,index)}\n                 /></li>\n    );\n\n    return(\n      <div>\n        <div>\n          <h2>Hole {this.props.holenum}</h2>\n          <h4>Par {this.props.holepar}</h4>\n          <ul className=\"scoring-list\">{playersbuttons}</ul>\n        </div>\n        <br/>\n        <div>\n          <button onClick={() => this.submitScore()}>Next Hole</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass GameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n       checked: true,\n       players: ['',''],\n       isBeginning: true,\n       isStarted: false\n    };\n  }\n\n  toggleSwitch = () => {\n    this.setState(prevState => {\n      return {\n        switched: !prevState.switched\n      };\n    });\n  };\n\n\n  handleChange(event,key) {\n    const nplayers = this.state.players.slice();\n    nplayers[key] = event.target.value;\n    this.setState({\n        players: nplayers\n    });\n  }\n\n  addPlayer() {\n    const nplayers = this.state.players.slice();\n    nplayers.push(\"\");\n    this.setState({\n       players: nplayers \n    });\n  }\n\n  submitPlayers(){\n     this.setState({\n         isBeginning: false,\n         isStarted: true\n     });\n  }\n\n  render() {\n    const players1 = this.state.players;\n    const playersbuttons = players1.map((player,index) => \n            <li><input \n                   type=\"text\"\n                   key={index} \n                   onChange={(event) => this.handleChange(event,index)}\n                   value={player}\n                 /></li>\n    );\n    return (\n      <div>\n        {this.state.isBeginning &&\n          <div>\n            <h1>Working Title</h1>\n            <ol>{playersbuttons}</ol>\n            <button className=\"add-player-button\" onClick={() => this.addPlayer()}>Add Player</button>\n            <br/>\n            <label className=\"toggle-space\">\n              <span>Front 9</span>\n              <Switch \n                  className=\"toggle-switch\"\n                  onChange={this.toggleSwitch} \n                  checked={this.state.checked}\n                  onColor=\"#223a5e\"\n                  onHandleColor=\"#8fabd6\"\n                  offColor=\"#8fabd6\"\n                  offHandleColor=\"#223a5e\"\n                  handleDiameter={15}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  boxShadow=\"0px 1px 5px rgba(255, 255, 255, 0.6)\"\n                  activeBoxShadow=\"0px 0px 1px 10px rgba(255, 255, 255, 0.2)\"\n                  height={24}\n                  width={40}\n                  id=\"small-radius-switch\"\n              />\n              <span>Back 9</span>\n            </label>\n            <br/>\n            <button className=\"start-game-button\" onClick={this.submitPlayers}>Start Game</button>\n          </div>}\n          {this.state.isStarted && <HoleScreen holenum=\"8\" holepar=\"3\" players={this.state.players}/>}\n       </div>\n    );\n  }\n}\n\nclass GameControl extends React.Component {\n  constructor(props) {\n     super(props);\n     this.state = { \n          isBeginning: true,\n          isStarted: false,\n          players: ['','','Luke'] \n     }; \n  }\n\n  handleChange(event,key) {\n    const nplayers = this.state.players.slice();\n    nplayers[key] = event.target.value;\n    this.setState({\n        players: nplayers\n    });\n  }\n\n  triggerStart () {\n     this.setState({\n          isBeginning: false,\n          isStarted: true\n     });\n  }\n  render() {\n     return(\n         <div>\n            {this.state.isBeginning && <GameForm submitPlayers={() => this.triggerStart()}  handleChange={(event,key) => this.handleChange(event,key)} names={this.state.players} />}\n            {this.state.isStarted && <HoleScreen holenum=\"1\" holepar=\"3\" players={this.state.players} />}           \n         </div>\n     );\n  }\n\n}\n\n\n\nReactDOM.render(\n   <GameForm />,\n   document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}
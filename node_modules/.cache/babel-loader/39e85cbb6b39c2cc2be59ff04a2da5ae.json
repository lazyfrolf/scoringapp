{"ast":null,"code":"var _jsxFileName = \"/Users/Kaden/Documents/reacttutorial/tictactoe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Scorebutton(props) {\n  return React.createElement(\"select\", {\n    className: \"scorebutton\",\n    value: props.value,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"1\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"2\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"3\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"4\"), React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"5\"), React.createElement(\"option\", {\n    value: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"6\"), React.createElement(\"option\", {\n    value: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"7\"), React.createElement(\"option\", {\n    value: \"8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"8\"), React.createElement(\"option\", {\n    value: \"9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"9\"), React.createElement(\"option\", {\n    value: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"10\"));\n}\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.playername), React.createElement(Scorebutton, {\n      value: \"3\",\n      onChange: event => this.props.onChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass HoleScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: ['Pearl', 'Jenny', 'Todd']\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      player1val: event.target.value\n    });\n  }\n\n  submitScore() {\n    alert(\"Player 1 scored \" + this.state.player1val);\n  }\n\n  render() {\n    const players1 = this.state.players.slice();\n    const playersbuttons = players1.map((player, index) => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Player, {\n      playername: player,\n      key: index,\n      onChange: event => this.handleChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Hole \", this.props.holenum), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Par \", this.props.holepar), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, playersbuttons)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.submitScore(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Next Hole\")));\n  }\n\n}\n\nclass GameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: ['', '']\n    };\n  }\n\n  submitPlayers() {\n    alert(this.state.players);\n  }\n\n  handleChange(event, key) {\n    const nplayers = this.state.players.slice();\n    nplayers[key] = event.target.value;\n    this.setState({\n      players: nplayers\n    });\n  }\n\n  addPlayer() {\n    const nplayers = this.state.players.slice();\n    nplayers.push(\"\");\n    this.setState({\n      players: nplayers\n    });\n  }\n\n  render() {\n    const players1 = this.state.players;\n    const playersbuttons = players1.map((player, index) => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      key: index,\n      onChange: event => this.handleChange(event, index),\n      value: player,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Working Title\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, playersbuttons), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addPlayer(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Add Player\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.submitPlayers(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Start Game\"));\n  }\n\n}\n\nReactDOM.render(React.createElement(HoleScreen, {\n  holenum: \"2\",\n  holepar: \"2\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/Kaden/Documents/reacttutorial/tictactoe/src/index.js"],"names":["React","ReactDOM","Scorebutton","props","value","onChange","Player","Component","constructor","render","playername","event","HoleScreen","state","players","handleChange","setState","player1val","target","submitScore","alert","players1","slice","playersbuttons","map","player","index","holenum","holepar","GameForm","submitPlayers","key","nplayers","addPlayer","push","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Scorebutton(props){\n  return(\n    <select className=\"scorebutton\" value={props.value} onChange={props.onChange}>\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\">3</option>\n      <option value=\"4\">4</option>\n      <option value=\"5\">5</option>\n      <option value=\"6\">6</option>\n      <option value=\"7\">7</option>\n      <option value=\"8\">8</option>\n      <option value=\"9\">9</option>\n      <option value=\"10\">10</option>\n    </select>\n  );\n}\n\n\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return(\n      <div>\n         <h3>{this.props.playername}</h3>\n         <Scorebutton value=\"3\" onChange={event => this.props.onChange(event)}/>\n      </div>\n    );\n  }\n}\n\nclass HoleScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n       players: ['Pearl','Jenny','Todd'] \n    };\n  }\n  \n  handleChange(event){\n     this.setState({\n         player1val: event.target.value\n     });\n  }  \n\n  submitScore() {\n    alert(\"Player 1 scored \" + this.state.player1val);\n  }\n  render() {\n    const players1 = this.state.players.slice();\n    const playersbuttons = players1.map((player,index) =>\n            <li><Player \n                   playername = {player}\n                   key={index} \n                   onChange={(event) => this.handleChange(event)}\n                 /></li>\n    );\n\n    return(\n      <div>\n        <div>\n          <h2>Hole {this.props.holenum}</h2>\n          <h4>Par {this.props.holepar}</h4>\n          <ul>{playersbuttons}</ul>\n        </div>\n        <br/>\n        <div>\n          <button onClick={() => this.submitScore()}>Next Hole</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass GameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n       players: ['',''] \n    };\n  }\n\n  submitPlayers(){\n     alert(this.state.players);\n  }\n\n  handleChange(event,key) {\n    const nplayers = this.state.players.slice();\n    nplayers[key] = event.target.value;\n    this.setState({\n        players: nplayers\n    });\n  }\n\n  addPlayer() {\n    const nplayers = this.state.players.slice();\n    nplayers.push(\"\");\n    this.setState({\n       players: nplayers \n    });\n  }\n\n  render() {\n    const players1 = this.state.players;\n    const playersbuttons = players1.map((player,index) => \n            <li><input \n                   type=\"text\"\n                   key={index} \n                   onChange={(event) => this.handleChange(event,index)}\n                   value={player}\n                 /></li>\n    );\n    return (\n      <div>\n        <h1>Working Title</h1>\n        <ol>{playersbuttons}</ol>\n        <br/>\n        <button onClick={() => this.addPlayer()}>Add Player</button>\n        <br/>\n        <button onClick={() => this.submitPlayers()}>Start Game</button>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n   <HoleScreen holenum=\"2\" holepar=\"2\"/>,\n   document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["index.js"],"names":["Scorebutton","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","value","onChange","Player","Object","_Users_Kaden_Documents_weaverfrolf_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_Kaden_Documents_weaverfrolf_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_Kaden_Documents_weaverfrolf_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","_this","playername","event","playerscore","React","Component","HoleScreen","_this2","playerlis","players","state","index","playerscorelis","playerscores","slice","target","setState","_this3","playersbuttons","map","player","key","totalscores","scoreChange","holenum","holepar","onClick","submitHole","nexthole","EndPlayer","playertotal","EndScreen","_this4","_this5","exportexcel","GameForm","_this6","toggleSwitch","prevState","inReverse","singleScores","totals","isBeginning","isStarted","isEnded","holeindex","holenumber","holenumbers","frontpar","backpar","i","nindex","uindex","nscores","nplayers","length","push","j","ntotal","ncurrscores","ngamescores","gamescoreslist","numtotals","onetotalstr","onetotalnum","Number","onecurrscorestr","newTotal","toString","_Users_Kaden_Documents_weaverfrolf_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","scorelis","_this7","type","handleChange","parlist","currindex","currholenum","currholepar","nexhole","addPlayer","react_switch__WEBPACK_IMPORTED_MODULE_8___default","checked","onColor","onHandleColor","offColor","offHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","id","submitPlayers","holeNext","trackScore","exportgame","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e0ae7ba.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Switch from 'react-switch';\nimport './index.css';\nimport fs from 'fs';\n\n\nfunction Scorebutton(props){\n  return(\n    <select className=\"scorebutton\" value={props.value} onChange={props.onChange}>\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\">3</option>\n      <option value=\"4\">4</option>\n      <option value=\"5\">5</option>\n      <option value=\"6\">6</option>\n      <option value=\"7\">7</option>\n      <option value=\"8\">8</option>\n      <option value=\"9\">9</option>\n      <option value=\"10\">10</option>\n    </select>\n  );\n}\n\n\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return(\n      <div>\n         <h3>{this.props.playername}</h3>\n         <Scorebutton value={this.props.value} onChange={event => this.props.onChange(event)}/>\n         <p>Total: {this.props.playerscore}</p>\n      </div>\n    );\n  }\n}\n\nclass HoleScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    const playerlis  = this.props.players;\n    this.state = {\n       players: playerlis  \n    };\n  }\n  \n  handleChange(event,index){\n     const playerscorelis = this.state.playerscores.slice()\n     playerscorelis[index] = event.target.value;\n     this.setState({\n         playerscores: playerscorelis\n     });\n  }  \n\n\n  render() {\n    const players1 = this.state.players.slice();\n    const playersbuttons = players1.map((player,index) =>\n            <li><Player \n                   playername = {player}\n                   key={index} \n                   playerscore={this.props.totalscores[index]}\n                   value={this.props.playerscores[index]}\n                   onChange={(event) => this.props.scoreChange(event,index)}\n                 /></li>\n    );\n\n    return(\n      <div>\n        <div>\n          <h2>Hole {this.props.holenum}</h2>\n          <h4>Par {this.props.holepar}</h4>\n          <ul className=\"scoring-list\">{playersbuttons}</ul>\n        </div>\n        <br/>\n        <div>\n          <button onClick={this.props.submitHole}>{this.props.nexthole}</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass EndPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return(\n      <div>\n         <h3>{this.props.playername}</h3>\n         <p>Total: {this.props.playertotal}</p>\n         <p>Scores: {this.props.playerscore}</p>\n      </div>\n    );\n  } \n}\nclass EndScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    const playerlis  = this.props.players;\n    this.state = {\n       players: playerlis\n    };\n  }\n\n\n  render() {\n    const players1 = this.state.players.slice();\n    const playersbuttons = players1.map((player,index) =>\n            <li><EndPlayer\n                   playername = {player}\n                   key={index}\n                   playertotal={this.props.totalscores[index]}\n                   playerscore={this.props.playerscores[index]}\n                 /></li>\n    );\n\n    return(\n      <div>\n        <div>\n          <h2>Results</h2>\n          <ul className=\"scoring-list\">{playersbuttons}</ul>\n        </div>\n        <br/>\n        <div>\n          <button onClick={this.props.exportexcel}>Export to spreadsheet</button>\n        </div>\n        <button>Play Again</button>\n      </div>\n    );\n  }\n\n}\n\nclass GameForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n       inReverse: false,\n       players: ['',''],\n       singleScores: ['3','3'],\n       totals: ['0','0'],\n       isBeginning: true,\n       isStarted: false,\n       isEnded: false,\n       holeindex: 0,\n       holenumber: \"1\",\n       holepar: \"3\",\n       nexthole: \"2\",\n       holenumbers: [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],\n       frontpar: [\"3\",\"2\",\"3\",\"2\",\"2\",\"3\",\"3\",\"2\",\"3\"],\n       backpar: [\"2\",\"3\",\"3\",\"2\",\"2\",\"3\",\"3\",\"2\",\"4\"]\n       \n    };\n  }\n\n  toggleSwitch = () => {\n    this.setState(prevState => {\n      return {\n        inReverse: !prevState.inReverse\n      };\n    });\n  };\n \n  \n  holeNext() {\n     const nindex = this.state.holeindex;\n     const uindex = nindex + 1;\n     var i;\n     var nscores = [];\n     const nplayers = this.state.players.slice();\n     for (i = 0; i < nplayers.length; i++){\n         nscores.push(\"3\");\n     }\n     const ntotal = this.state.totals.slice();\n     const ncurrscores = this.state.singleScores.slice()\n     const ngamescores = this.state.gamescoreslist.slice()\n     var numtotals = [];\n     var j;\n     for (j=0; j< nplayers.length; j++){\n          var onetotalstr = ntotal[j];\n          var onetotalnum = Number(onetotalstr);\n          var onecurrscorestr = ncurrscores[j];\n          ngamescores[j] = ngamescores[j] + onecurrscorestr + (nindex === 8 ? \"\" : \",\") \n          var onecurrscorenum = Number(onecurrscorestr);\n          var newTotal = onetotalnum + onecurrscorenum;\n          numtotals.push(newTotal.toString());\n          \n     }\n     \n     if(nindex === 8){\n        this.setState({\n             ...this.state,\n             singleScores: nscores,\n             totals: numtotals,\n             gamescoreslist: ngamescores,\n             isStarted: false,\n             isEnded: true\n\n        });\n     }\n     else{\n        this.setState({\n             ...this.state,\n             holeindex: uindex,\n             singleScores: nscores,\n             totals: numtotals,\n             gamescoreslist: ngamescores\n        });\n     }\n  }\n\n  handleChange(event,key) {\n    const nplayers = this.state.players.slice();\n    nplayers[key] = event.target.value;\n    this.setState({\n        players: nplayers\n    });\n  }\n\n  addPlayer() {\n    const nplayers = this.state.players.slice();\n    nplayers.push(\"\");\n    const nscores = this.state.singleScores.slice();\n    nscores.push(\"3\");\n    const ntotal = this.state.totals.slice();\n    ntotal.push(\"0\");\n    this.setState({\n       players: nplayers,\n       singleScores: nscores,\n       totals: ntotal \n    });\n  }\n\n  submitPlayers(){\n     var scorelis = [];\n     var nplayers = this.state.players.slice();\n     for(var key in nplayers){\n          scorelis.push('');\n     }\n     this.setState({\n         isBeginning: false,\n         isStarted: true,\n         gamescoreslist: scorelis\n     });\n  }\n\n  trackScore(event,index) {\n     const nscores = this.state.singleScores.slice();\n     nscores[index] = event.target.value;\n     this.setState({\n          ...this.state,\n          singleScores: nscores \n     });\n     \n  }\n\n  exportgame() {\n    let data = \"Put this in a file, please\";\n  }\n\n  render() {\n    const players1 = this.state.players;\n    const playersbuttons = players1.map((player,index) => \n            <li><input \n                   type=\"text\"\n                   key={index} \n                   onChange={(event) => this.handleChange(event,index)}\n                   value={player}\n                 /></li>\n    );\n    const parlist = (this.state.inReverse ? this.state.backpar : this.state.frontpar);\n    const currindex = this.state.holeindex;\n    const currholenum = this.state.holenumbers[currindex];\n    const currholepar = parlist[currindex];\n    const nexhole = (currindex === 8 ?  \"End Game\" : \"Hole \" + this.state.holenumbers[currindex+1]);\n    return (\n      <div>\n        {this.state.isBeginning &&\n          <div>\n            <h1>Working Title</h1>\n            <ol>{playersbuttons}</ol>\n            <button className=\"add-player-button\" onClick={() => this.addPlayer()}>Add Player</button>\n            <br/>\n            <label className=\"toggle-space\">\n              <span>Front 9</span>\n              <Switch \n                  className=\"toggle-switch\"\n                  onChange={this.toggleSwitch} \n                  checked={this.state.inReverse}\n                  onColor=\"#223a5e\"\n                  onHandleColor=\"#8fabd6\"\n                  offColor=\"#8fabd6\"\n                  offHandleColor=\"#223a5e\"\n                  handleDiameter={15}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  boxShadow=\"0px 1px 5px rgba(255, 255, 255, 0.6)\"\n                  activeBoxShadow=\"0px 0px 1px 10px rgba(255, 255, 255, 0.2)\"\n                  height={24}\n                  width={40}\n                  id=\"small-radius-switch\"\n              />\n              <span>Back 9</span>\n            </label>\n            <br/>\n            <button className=\"start-game-button\" onClick={() => this.submitPlayers()}>Start Game</button>\n          </div>}\n          {this.state.isStarted && <HoleScreen totalscores={this.state.totals} playerscores={this.state.singleScores} submitHole={() => this.holeNext()} scoreChange={(event,index) => this.trackScore(event,index)}   holenum={currholenum} holepar={currholepar} nexthole={nexhole} players={this.state.players}/>}\n          {this.state.isEnded && <EndScreen  exportexcel = {() => this.exportgame()}players={this.state.players} totalscores={this.state.totals} playerscores={this.state.gamescoreslist}/>}\n       </div>\n    );\n  }\n}\n\n\nReactDOM.render(\n   <GameForm />,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}